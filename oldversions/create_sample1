#!/bin/bash

# try to assign parameters
if [ ${#} -ne 1 ]
then
  echo "SYNTAXIS: create_sample NAME" 1>&2
  exit 1
else
  NAME="${1}"
fi

# make the directory structure
mkdir "${NAME}"
cd "${NAME}"
mkdir scf dmrg dmrg/Ag0 dmrg/Ag0/Tmp
WORKINGSPACE=$(pwd | sed 's/.*CrF6/CrF6/')
cp "${CRFBIN}"/templates/jobfile_template.sh ./jobfile.sh
sed -i "s+CrF6/RELATIV/BASIS/ACTIVESPACE/R+${WORKINGSPACE}+" \
    ./jobfile.sh
sed -i "s/DMRGSUBDIR/Ag0/" ./jobfile.sh
sed "/#PBS/,/ulimit/d" ./jobfile.sh > ./testfile.sh
sed -i "s/&> dmrg.out/\#&> dmrg.out/" ./testfile.sh
cp "${CRFBIN}"/templates/chemps2_template ./dmrg/Ag0/dmrg.in
sed -i "s/IRREPVAL/0/; s/EXCITVAL/0/" ./dmrg/Ag0/dmrg.in
cp "${CRFBIN}"/templates/scf_jobfile.sh ./scf/jobfile.sh
sed -i "s+CrF6/RELATIV/BASIS/ACTIVESPACE/R+${WORKINGSPACE}+" \
    ./scf/jobfile.sh

cat << 'HERE'
To be done:
-In jobfile.sh and testfile.sh:
BASIS, RELATIV, WALLTIME, RESOURCES
-In dmrg/Ag0/dmrg.in:
IRREPVAL, EXCITVAL, NELECVAL, [OPTIONAL] scf->act
-A psi4 input file using
psi4_input scf energy BASIS [RELATIV]
-A psi4 run (don't forget the nodes!)
-[optional] a file "orborder.txt"
-[optional] an act.FCIDUMP using
python FCImanip.py ./scf.FCIDUMP ./act.FCIDUMP ../../orborder.txt
-a FCIDUMP convertion using
psi2molpro ./xxx.FCIDUMP > xxxMol.FCIDUMP
fcidump_new2old ./xxxMol.FCIDUMP
-a run of testfiles.sh
-a qsub of jobfile.sh
HERE
