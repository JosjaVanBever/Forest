#!/bin/bash

# @param
# $1 : the FCIDUMP file to manipulate
# $3 : the name of the output file
# $2 : the orborder file

# @error
# exit 1 : syntax error
# exit 2 : unreadable files
# exit 3 : no valid numpy

date

# syntax print for error messages
SYNTAX="Syntaxis: FCImanip INFILE OUTFILE ORBORDER"
UNREAD="FCImanip: Could not read"
INVALID="No valid numpy module is loaded."

# check input parameters
if [ $# != '3' ]
then
  echo "${SYNTAX}" 1>&2
  exit 1
fi
for file in $1 $3; do
  if [ ! -r ${file} ]
  then
    echo "${UNREAD} ${file}" 1>&2
    exit 2
  fi
done

# check whether numpy is available
python -c "import numpy"
if [ $? != '0' ]
then
  echo "${INVALID}" 1>&2
  exit 3
fi

FCIDUMP="$1"
OUTFILE="$2"
ORBORDER="$3"

# name of temporary diractory
TMP="tmp$$"

mkdir "${TMP}"
cd "${TMP}"

# split the FCIDUMP file
split -5000000 "../${FCIDUMP}" _FCI #5000000 
part1='_FCIaa'
HEADLENGTH=$(( $(grep -n -m1 '&END' "${part1}" | cut -d':' -f1) + 1 ))
csplit -f _FCI_ "${part1}" "${HEADLENGTH}" > /dev/null
# FCI_00 now contains the header and FCI* are the integrals
mv _FCI_00 _header
mv _FCI_01 _FCIaa

python "${CRFBIN}"/fcidump/FCIfilter.py _header "../${ORBORDER}" |
  sed 's/,//g; s/\[//g; s/\]//g' > filter


exec 3< 'filter'
# skip the header
read line 0<&3
# read the virtual orbitals
read virtual 0<&3
todelete=$(sed 's/ /|/g; s/^/(/; s/$/)/' <<< "${virtual}")
# read the other orbitals
read others 0<&3
replace=''
count='1'
for orb in $others; do
  replace+="s/ ${orb}(\b)/ ${count}\1/g; "
  (( count++ ))
done

export todelete
export replace

echo _FCI* | xargs -n1 --max-procs 6 bash -c '
echo "handling $1"
sed -i -E "/ ${todelete}\b/d" "$1"
sed -i -E "${replace}" "$1"' bash

alphabetic=$(find . -name "_FCI*" -print0 | sort -z | xargs -0 echo)
cat _header ${alphabetic} > novirtual.FCIDUMP

python "${CRFBIN}"/fcidump/FCImanip.py novirtual.FCIDUMP ../"${OUTFILE}" ../"${ORBORDER}"

date

cd ..
rm -r "${TMP}"

exit 0
